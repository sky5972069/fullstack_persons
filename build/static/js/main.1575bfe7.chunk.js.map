{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","request","delete","Notification","message","className","ErrorNotification","Filter","filt","changeFunc","value","onChange","PersonForm","props","onSubmit","addName","newName","handleNameChange","newNum","handleNumChange","type","Persons","persons","delFunc","map","person","key","name","number","onClick","App","useState","setPersons","setNewName","setNum","setFilt","success","setSuccess","error","setError","useEffect","personService","successMessage","sucStr","setTimeout","nameToShow","filter","toUpperCase","indexOf","console","log","e","target","preventDefault","index","i","length","window","confirm","newId","catch","n","concat","newPersons","splice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1575bfe7.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst del = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(request)\r\n  }\r\n\r\n\r\nexport default { getAll, create, update, del }","import React, { useState , useEffect } from 'react'\r\nimport './index.css'\r\nimport personService from './services/persons'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"success\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ErrorNotification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Filter = ({filt, changeFunc}) => {\r\n  return (\r\n    <div>name: <input value={filt} onChange={changeFunc}/></div>\r\n  )\r\n}\r\n\r\nconst PersonForm = (props) => {\r\n  return(\r\n    <form onSubmit={props.addName}>\r\n    <div>name: <input value={props.newName} onChange={props.handleNameChange} /></div>\r\n    <div>number: <input value={props.newNum} onChange={props.handleNumChange}/></div>\r\n    <div>\r\n      <button type=\"submit\">add</button>\r\n    </div>\r\n  </form>\r\n  )\r\n}\r\n\r\nconst Persons = ({persons,delFunc}) => {\r\n  return(\r\n    <table>\r\n      <tbody>\r\n        {persons.map(person=>(<tr key={person.name}>\r\n          <td>\r\n            {person.name} {person.number}\r\n            <button onClick={()=>delFunc(person.id)}>delete</button>\r\n          </td></tr>))}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([\r\n    { name: 'Arto Hellas', number: '040-1234567'}, {name: 'Ada Lovelace', number:'39-44-5323523'}\r\n  ]) \r\n  const [ newName, setNewName ] = useState('Martin Fowler')\r\n  const [ newNum, setNum ] = useState('11111111111')\r\n  const [ filt, setFilt ] =useState('Arto Hellas')\r\n  const [ success, setSuccess ] = useState(null)\r\n  const [ error, setError ] = useState(null)\r\n  useEffect(() => {\r\n    personService.getAll().then((response) => {\r\n      setPersons(response)\r\n    })\r\n  },[])\r\n  const successMessage = (sucStr) => {\r\n    setSuccess(sucStr)\r\n    setTimeout(() => {\r\n      setSuccess(null)\r\n    }, 3000)\r\n  }\r\n\r\n  const addName = (e) => {\r\n    e.preventDefault()\r\n    let index=-1\r\n    for (let i=0; i<persons.length; i++){\r\n      if (persons[i].name === newName){\r\n        index = i\r\n        break\r\n      }\r\n    }\r\n    console.log(index)\r\n    if (index !== -1) {\r\n      let confirmed = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\r\n      if(confirmed){\r\n        let newId = persons[index].id\r\n        let newPerson = { name: newName, number:newNum}\r\n        personService.update(newId, newPerson)\r\n        .then((response)=>setPersons(persons.map(person=>person.id===newId ? response : person)))\r\n        .then(()=>successMessage(`Updated ${newName}`))\r\n        .catch(error => {\r\n          setError(\r\n            `Information of '${newName}' was already removed from server`\r\n          )\r\n          setTimeout(() => {\r\n            setError(null)\r\n          }, 3000)\r\n          setPersons(persons.filter(n => n.id !== newId))\r\n        })\r\n      }\r\n    } else {\r\n      personService.create({ name: newName, number:newNum})\r\n      .then((response)=>setPersons(persons.concat(response)))\r\n      .then(()=>successMessage(`Added ${newName}`))\r\n      .catch(error =>{\r\n        setError(error.response.data)\r\n        setTimeout(() => {\r\n          setError(null)\r\n        }, 3000)\r\n      })\r\n    }\r\n    \r\n  }\r\n\r\n  const delFunc = (id) => {\r\n    let newPersons = [...persons]\r\n    let index = 0\r\n    for (let i = 0; i < newPersons.length; i++) { \r\n        if (newPersons[i].id === id){\r\n          index = i\r\n          break\r\n        }\r\n    }\r\n    newPersons.splice(index,1)\r\n    console.log(newPersons)\r\n    personService.del(id)\r\n      .then(()=>setPersons(newPersons))\r\n      .catch(error => {\r\n        setError(\r\n          `Information of '${newName}' was already removed from server`\r\n        )\r\n        setTimeout(() => {\r\n          setError(null)\r\n        }, 3000)\r\n        setPersons(persons.filter(n => n.id !== id))\r\n      })\r\n  }\r\n\r\n\r\n  const handleNameChange = (e) => {\r\n    setNewName(e.target.value)\r\n  }\r\n  const handleNumChange = (e) => {\r\n    setNum(e.target.value)\r\n  }\r\n  const handleFilterChange = (e) => {\r\n    setFilt(e.target.value)\r\n  }\r\n  const nameToShow = persons.filter(person=>person.name.toUpperCase().indexOf(filt.toUpperCase())!==-1)\r\n  console.log(nameToShow)\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={success} />\r\n      <ErrorNotification message={error} />\r\n      <Filter filt={filt} changeFunc={handleFilterChange} />\r\n      <h2>add a new</h2>\r\n      <PersonForm addName={addName} newName={newName} newNum={newNum} \r\n      handleNameChange={handleNameChange} handleNumChange={handleNumChange} />\r\n      <h2>Numbers</h2>\r\n      <Persons persons={nameToShow} delFunc={delFunc} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}